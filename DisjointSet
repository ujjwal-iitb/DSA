#Union By Size

class DSU {
    vector<int> parent, size;
    
    public: 
    
    DSU(int n){
        parent.resize(n+1);
        size.resize(n+1, 1);
        
        for(int i = 0; i<n+1; i++){
            parent[i] = i;
        }
    }
    
    int findParent(int u){
        if(parent[u]==u){
            return parent[u];
        }
        else{
            return parent[u] = findParent(parent[u]);
        }
    }
    
    void unionBySize(int u, int v){
        int pu = findParent(u);
        int pv = findParent(v);
        
        if(size[pv]>size[pu]){
            size[pv] += size[pu];
            parent[pu] = pv;
        }
        else{
            size[pu] += size[pv];
            parent[pv] = pu;
        }
    }
    
    bool sameParent(int u, int v){
        return findParent(u)==findParent(v);
    }
};
